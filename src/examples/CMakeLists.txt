# find_package(Eigen3 REQUIRED)
# if(Eigen3_FOUND)
#   if(IL_MKL)
#       if(APPLE)
#           target_link_directories(bigwham_shared PRIVATE ${OPENMP_LIBRARY})
#           target_link_libraries(bigwham_shared ${CMAKE_MKL_LIBRARIES} -lpthread -lm -ldl)
#           target_compile_definitions(bigwham_shared PRIVATE IL_MKL=1 IL_BLAS=0 IL_OPENMP=0)
#           target_include_directories(bigwham_shared PRIVATE ${CMAKE_SOURCE_DIR} $ENV{MKLROOT}/include $ENV{TBBROOT}/include)
#       elseif(UNIX)
#           target_link_directories(bigwham_shared PRIVATE ${OPENMP_LIBRARY})
#           target_link_libraries(bigwham_shared "-Wl,--start-group" ${CMAKE_MKL_LIBRARIES} "-Wl,--end-group" -lpthread -lm -ldl)
#           target_compile_definitions(bigwham_shared PRIVATE IL_MKL=1 IL_BLAS=1 IL_OPENMP=1)
#           target_include_directories(bigwham_shared PRIVATE ${CMAKE_SOURCE_DIR} $ENV{MKLROOT}/include $ENV{TBBROOT}/include)
#       elseif(WIN32)
#           target_compile_definitions(bigwham_shared PRIVATE IL_MKL=1 IL_BLAS=1 IL_OPENMP=1)
#           target_include_directories(bigwham_shared PRIVATE ${CMAKE_SOURCE_DIR} $ENV{MKLROOT}/include ${EIGEN3_INCLUDE_DIR})
#       endif()
#   elseif(IL_OPENBLAS)
#       target_link_libraries(bigwham_shared  ${CMAKE_OPENBLAS_LIBRARIES} -lgfortran -lpthread -lm    -ltbb   )
#       target_compile_definitions(bigwham_shared PRIVATE IL_OPENBLAS=1 IL_BLAS=1 IL_OPENMP=1)
#       target_include_directories(bigwham_shared PRIVATE ${CMAKE_SOURCE_DIR}  $ENV{TBBROOT}/include/tbb ${OPENBLASROOT})
#   endif()

# else(Eigen3_FOUND)
#   message(SEND_ERROR "This application cannot compile without eigen")
# endif(Eigen3_FOUND)



add_executable(rep_test rep_test.cpp cnpy.cpp ../../il/il/io/numpy/numpy.cpp)
target_link_libraries(rep_test PRIVATE part -lz)
